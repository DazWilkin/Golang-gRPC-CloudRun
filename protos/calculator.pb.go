// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/calculator.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Operation int32

const (
	Operation_ADD      Operation = 0
	Operation_SUBTRACT Operation = 1
)

var Operation_name = map[int32]string{
	0: "ADD",
	1: "SUBTRACT",
}

var Operation_value = map[string]int32{
	"ADD":      0,
	"SUBTRACT": 1,
}

func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}

func (Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_95744b1f6e4c0799, []int{0}
}

type BinaryOperation struct {
	FirstOperand         float32   `protobuf:"fixed32,1,opt,name=first_operand,json=firstOperand,proto3" json:"first_operand,omitempty"`
	SecondOperand        float32   `protobuf:"fixed32,2,opt,name=second_operand,json=secondOperand,proto3" json:"second_operand,omitempty"`
	Operation            Operation `protobuf:"varint,3,opt,name=operation,proto3,enum=Operation" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BinaryOperation) Reset()         { *m = BinaryOperation{} }
func (m *BinaryOperation) String() string { return proto.CompactTextString(m) }
func (*BinaryOperation) ProtoMessage()    {}
func (*BinaryOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_95744b1f6e4c0799, []int{0}
}

func (m *BinaryOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryOperation.Unmarshal(m, b)
}
func (m *BinaryOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryOperation.Marshal(b, m, deterministic)
}
func (m *BinaryOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryOperation.Merge(m, src)
}
func (m *BinaryOperation) XXX_Size() int {
	return xxx_messageInfo_BinaryOperation.Size(m)
}
func (m *BinaryOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryOperation.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryOperation proto.InternalMessageInfo

func (m *BinaryOperation) GetFirstOperand() float32 {
	if m != nil {
		return m.FirstOperand
	}
	return 0
}

func (m *BinaryOperation) GetSecondOperand() float32 {
	if m != nil {
		return m.SecondOperand
	}
	return 0
}

func (m *BinaryOperation) GetOperation() Operation {
	if m != nil {
		return m.Operation
	}
	return Operation_ADD
}

type CalculationResult struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculationResult) Reset()         { *m = CalculationResult{} }
func (m *CalculationResult) String() string { return proto.CompactTextString(m) }
func (*CalculationResult) ProtoMessage()    {}
func (*CalculationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_95744b1f6e4c0799, []int{1}
}

func (m *CalculationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculationResult.Unmarshal(m, b)
}
func (m *CalculationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculationResult.Marshal(b, m, deterministic)
}
func (m *CalculationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculationResult.Merge(m, src)
}
func (m *CalculationResult) XXX_Size() int {
	return xxx_messageInfo_CalculationResult.Size(m)
}
func (m *CalculationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculationResult.DiscardUnknown(m)
}

var xxx_messageInfo_CalculationResult proto.InternalMessageInfo

func (m *CalculationResult) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterEnum("Operation", Operation_name, Operation_value)
	proto.RegisterType((*BinaryOperation)(nil), "BinaryOperation")
	proto.RegisterType((*CalculationResult)(nil), "CalculationResult")
}

func init() {
	proto.RegisterFile("protos/calculator.proto", fileDescriptor_95744b1f6e4c0799)
}

var fileDescriptor_95744b1f6e4c0799 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0x4f, 0x4e, 0xcc, 0x49, 0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0x2f, 0xd2, 0x03, 0x8b,
	0x28, 0xb5, 0x33, 0x72, 0xf1, 0x3b, 0x65, 0xe6, 0x25, 0x16, 0x55, 0xfa, 0x17, 0xa4, 0x16, 0x25,
	0x96, 0x64, 0xe6, 0xe7, 0x09, 0x29, 0x73, 0xf1, 0xa6, 0x65, 0x16, 0x15, 0x97, 0xc4, 0xe7, 0x83,
	0x84, 0xf2, 0x52, 0x24, 0x18, 0x15, 0x18, 0x35, 0x98, 0x82, 0x78, 0xc0, 0x82, 0xfe, 0x10, 0x31,
	0x21, 0x55, 0x2e, 0xbe, 0xe2, 0xd4, 0xe4, 0xfc, 0xbc, 0x14, 0xb8, 0x2a, 0x26, 0xb0, 0x2a, 0x5e,
	0x88, 0x28, 0x4c, 0x99, 0x06, 0x17, 0x67, 0x3e, 0xcc, 0x60, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x3e,
	0x23, 0x2e, 0x3d, 0xb8, 0x55, 0x41, 0x08, 0x49, 0x25, 0x6d, 0x2e, 0x41, 0x67, 0xa8, 0xeb, 0x40,
	0x32, 0xa9, 0xc5, 0xa5, 0x39, 0x25, 0x42, 0x62, 0x5c, 0x6c, 0x45, 0x60, 0x16, 0xd4, 0x0d, 0x50,
	0x9e, 0x96, 0x12, 0x17, 0x27, 0xc2, 0xbd, 0xec, 0x5c, 0xcc, 0x8e, 0x2e, 0x2e, 0x02, 0x0c, 0x42,
	0x3c, 0x5c, 0x1c, 0xc1, 0xa1, 0x4e, 0x21, 0x41, 0x8e, 0xce, 0x21, 0x02, 0x8c, 0x46, 0xf6, 0x5c,
	0x5c, 0xce, 0x70, 0xef, 0x0a, 0x19, 0x72, 0x71, 0xc2, 0x78, 0xa9, 0x42, 0x02, 0x7a, 0x68, 0x7e,
	0x96, 0x12, 0xd2, 0xc3, 0xb0, 0xdc, 0x89, 0x23, 0x8a, 0x0d, 0x12, 0x6c, 0x49, 0x10, 0xda, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x73, 0xe5, 0x4b, 0xca, 0x47, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculatorClient is the client API for Calculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorClient interface {
	Calculate(ctx context.Context, in *BinaryOperation, opts ...grpc.CallOption) (*CalculationResult, error)
}

type calculatorClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculatorClient(cc grpc.ClientConnInterface) CalculatorClient {
	return &calculatorClient{cc}
}

func (c *calculatorClient) Calculate(ctx context.Context, in *BinaryOperation, opts ...grpc.CallOption) (*CalculationResult, error) {
	out := new(CalculationResult)
	err := c.cc.Invoke(ctx, "/Calculator/Calculate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServer is the server API for Calculator service.
type CalculatorServer interface {
	Calculate(context.Context, *BinaryOperation) (*CalculationResult, error)
}

// UnimplementedCalculatorServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServer struct {
}

func (*UnimplementedCalculatorServer) Calculate(ctx context.Context, req *BinaryOperation) (*CalculationResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calculate not implemented")
}

func RegisterCalculatorServer(s *grpc.Server, srv CalculatorServer) {
	s.RegisterService(&_Calculator_serviceDesc, srv)
}

func _Calculator_Calculate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BinaryOperation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).Calculate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Calculator/Calculate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).Calculate(ctx, req.(*BinaryOperation))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Calculator",
	HandlerType: (*CalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Calculate",
			Handler:    _Calculator_Calculate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/calculator.proto",
}
